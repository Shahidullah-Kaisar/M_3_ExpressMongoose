
// console.log(process.argv); //ржПржЯрж┐ Node.js-ржПрж░ ржорж╛ржзрзНржпржорзЗ ржЪрж╛рж▓рзБ рж╣ржУржпрж╝рж╛ рж╕рзНржХрзНрж░рж┐ржкрзНржЯрзЗрж░ рж╕ржм command line arguments ржкрзНрж░рж┐ржирзНржЯ ржХрж░ржмрзЗред

const path = require('path'); //Node.js-ржПрж░ path module ржЯрж╛ import ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржПржЯрж╛ ржлрж╛ржЗрж▓ ржмрж╛ ржлрзЛрж▓рзНржбрж╛рж░рзЗрж░ path ржмрж╛ржирж╛рждрзЗ ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗ, ржпрзЗржЯрж╛ operating system independent рж╣рзЯред
const fs = require('fs'); //Node.js-ржПрж░ fs ржорж╛ржирзЗ file system module import ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржПржЯрж╛ ржжрж┐рзЯрзЗ ржлрж╛ржЗрж▓ ржкрзЬрж╛, рж▓рзЗржЦрж╛, ржЕрзНржпрж╛ржкрзЗржирзНржб ржХрж░рж╛рж░ ржоржд ржХрж╛ржЬ ржХрж░рж╛ ржпрж╛рзЯред


const inputArguments = process.argv.slice(2);
console.log(inputArguments);
/*
const inputArguments = process.argv.slice(2);

process.argv рж╣рж▓рзЛ ржПржХржЯрж╛ array, ржпрзЗржЦрж╛ржирзЗ:

index 0 = node executable path
index 1 = рждрзЛржорж╛рж░ js ржлрж╛ржЗрж▓рзЗрж░ path
index 2+ = ржЗржЙржЬрж╛рж░ ржпрж╛ input ржжрзЗрзЯ, ржпрзЗржоржи Hello Bro

.slice(2) ржорж╛ржирзЗ ржкрзНрж░ржержо ржжрзБржЗржЯрж╛ ржмрж╛ржж ржжрж┐рзЯрзЗ ржмрж╛ржХрж┐ input ржЧрзБрж▓рзЛ ржирзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗред
ржзрж░рзЛ: node index.js Hello Bro ржжрж┐рж▓рзЗ
inputArguments = ['Hello', 'Bro']

*/

const text = inputArguments.join(" ").concat("\n"); // input ржЧрзБрж▓рзЛржХрзЗ ржПржХржЯрж╛ space ржжрж┐рзЯрзЗ ржЬрзЛрзЬрж╛ рж╣рзЯрзЗржЫрзЗ: "Hello Bro" ..рж╢рзЗрж╖рзЗ ржПржХржЯрж╛ newline (\n) ржпрзЛржЧ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ, ржпрж╛рждрзЗ ржлрж╛ржЗрж▓рзЗ ржПржХ рж▓рж╛ржЗржи ржирж╛ржорж╛рж░ ржоржд рж╣рзЯред
console.log(text);

const timeStamp = new Date().toISOString(); //ржПржЦржиржХрж╛рж░ рж╕ржорзЯ (рждрж╛рж░рж┐ржЦ + рж╕ржорзЯ) ISO format ржП ржирзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗред ржзрж░рзЛ: 2025-05-31T12:34:56.789Z
console.log(timeStamp);

const message = `${text} ${timeStamp} \n`; //text,  timeStamp, newline ржЬрзБрзЬрзЗ ржПржХржЯрж╛ ржкрзВрж░рзНржг ржмрж╛рж░рзНрждрж╛ ржмрж╛ржирж╛ржирзЛ рж╣рзЯрзЗржЫрзЗред

if(!message){
    console.log("тЭМ Please provide a message to log");
    console.log("Example: node index.js Hello Bro");
    process.exit(1); //ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржерзЗржорзЗ ржпрж╛ржмрзЗ process.exit(1); ржжрж┐рзЯрзЗ
}

const filePath = path.join(__dirname, "log.txt"); //E:\Level 2\vs code\M_3_ExpressMongoose\Mo_13_nodeJsCoreModules\logger_app\log.txt
console.log('filePath:', filePath);

fs.appendFile(filePath, message, {encoding: "utf-8"}, ()=>{
    console.log(" Your log added successfully")
})

/*
тЬЕ рждрзБржорж┐ ржПржЗ ржХрзЛржб ржерзЗржХрзЗ ржХрзА рж╢рж┐ржЦрж▓рзЗ?

1. Command Line Arguments ржирзЗржУрзЯрж╛

рж╢рж┐ржЦрж▓рзЗ ржХрж┐ржнрж╛ржмрзЗ node index.js Hello Bro ржПрж░ ржорждрзЛ ржХржорж╛ржирзНржб ржерзЗржХрзЗ ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛ ржпрж╛рзЯред
process.argv.slice(2) ржжрж┐рзЯрзЗ ржЗржЙржЬрж╛рж░рзЗрж░ ржжрзЗржУрзЯрж╛ ржорзЗрж╕рзЗржЬ ржирзЗржУрзЯрж╛ рж╣рзЯред

2. JavaScript String Handling

.join(" ") ржжрж┐рзЯрзЗ array ржХрзЗ рж╕рзНржЯрзНрж░рж┐ржВ ржмрж╛ржирж╛ржирзЛред
.concat("\n") ржжрж┐рзЯрзЗ рж▓рж╛ржЗржи рж╢рзЗрж╖рзЗ newline ржпрзЛржЧ ржХрж░рж╛ред
Template literal (\${value}``) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржбрж╛ржЗржирж╛ржорж┐ржХ ржЯрзЗржХрзНрж╕ржЯ ржмрж╛ржирж╛ржирзЛред

3. Date & Time Handling

new Date().toISOString() ржжрж┐рзЯрзЗ current рж╕ржорзЯ ржирзЗрзЯрж╛ ржПржмржВ ISO ржлрж░ржорзНржпрж╛ржЯрзЗ рж░рзВржкрж╛ржирзНрждрж░ред

4. File System (fs) Module

ржХрж┐ржнрж╛ржмрзЗ fs.appendFile() ржжрж┐рзЯрзЗ ржХрзЛржи ржлрж╛ржЗрж▓рзЗ рж▓рзЗржЦрж╛ ржпрж╛рзЯред
ржлрж╛ржЗрж▓ ржирж╛ ржерж╛ржХрж▓рзЗ ржХрж┐ржнрж╛ржмрзЗ Node.js ржирж┐ржЬрзЗ ржерзЗржХрзЗ рждрзИрж░рж┐ ржХрж░рзЗ ржирзЗрзЯред

5. Path Handling

path.join(__dirname, "log.txt") ржжрж┐рзЯрзЗ system-independent ржнрж╛ржмрзЗ ржлрж╛ржЗрж▓ржкрж╛рже ржмрж╛ржирж╛ржирзЛред

6. Error Handling ржУ Exit
ржЗржЙржЬрж╛рж░ ржЗржиржкрзБржЯ ржирж╛ ржжрж┐рж▓рзЗ ржХрж┐ржнрж╛ржмрзЗ Error ржжрзЗржЦрж┐рзЯрзЗ ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржмржирзНржз ржХрж░рж╛ ржпрж╛рзЯ (process.exit(1))


ржПржЗ ржЬрж┐ржирж┐рж╕ржЧрзБрж▓рзЛ рж░рж┐рзЯрзЗрж▓ рж▓рж╛ржЗржлрзЗ ржХрзЛржерж╛рзЯ рж▓рж╛ржЧржмрзЗ?

ЁЯФ╣ 1. рж▓ржЧ рж░рж╛ржЦрж╛рж░ рж╕рж┐рж╕рзНржЯрзЗржо ржмрж╛ржирж╛ржирзЛ

ржпрзЗржХрзЛржирзЛ ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи, ржУрзЯрзЗржмрж╕рж╛ржЗржЯ ржмрж╛ рж╕рж╛рж░рзНржнрж╛рж░рзЗ рж▓ржЧ рж░рж╛ржЦрждрзЗ рж╣рзЯтАФржпрзЗржоржи:
ржЗржЙржЬрж╛рж░ ржХржЦржи рж▓ржЧржЗржи ржХрж░рж▓рзЛ
ржХрзЗ ржХрзА рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ ржкрж╛ржарж╛рж▓рзЛ
ржХрзЛржи Error ржШржЯрж▓рзЛ
рждрзЛржорж╛рж░ ржПржЗ ржХрзЛржбржЯрж╛ рж╕рзЗржЗ ржХрж╛ржЬрзЗрж░ ржЫрзЛржЯрзНржЯ ржПржХржЯрж╛ ржнрж┐рждрзНрждрж┐ (basic logger)ред

ЁЯФ╣ 2. CLI (Command Line Interface) ржЕрзНржпрж╛ржк ржмрж╛ржирж╛ржирзЛ

ржЕржирзЗржХ ржЯрзБрж▓ ржмрж╛ рж╕ржлржЯржУрзЯрзНржпрж╛рж░ command line ржжрж┐рзЯрзЗ ржЪрж╛рж▓рж╛ржирзЛ рж╣рзЯ:
ржпрзЗржоржи git, npm, nodemon
рждрзЗржоржи рждрзБржорж┐ future ржП ржирж┐ржЬрзЗрж░ CLI tools ржмрж╛ржирж╛рждрзЗ ржкрж╛рж░ржмрж╛
ржПржЗ ржХрзЛржбржЯрж╛ рждрж╛рж░ ржЬржирзНржп ржПржХржжржо ржкрзНрж░ржержо ржзрж╛ржкред

ЁЯФ╣ 3. Automation Tools ржмрж╛ржирж╛ржирзЛ

ржпржжрж┐ future-ржП ржПржоржи ржХрзЛржи ржХрж╛ржЬ ржерж╛ржХрзЗ, ржпрзЗржЯрж╛ рждрзБржорж┐ ржмрж╛рж░ржмрж╛рж░ ржХрж░рзЛ, рж╕рзЗржЯрж╛ ржЕржЯрзЛржорзЗржЯ ржХрж░рждрзЗ ржкрж╛рж░ржмрж╛ CLI рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржжрж┐рзЯрзЗред
ржпрзЗржоржи:

ржПржХржЯрж╛ ржлрзЛрж▓рзНржбрж╛рж░рзЗ ржлрж╛ржЗрж▓ ржЕрзНржпрж╛ржб рж╣рж▓рзЗ рждрж╛рж░ ржирж╛ржо ржЯрж╛ржЗржорж╕рж╣ рж▓ржЧ ржХрж░рзЗ рж░рж╛ржЦрж╛
ржХрзЛржирзЛ keyword ржЗржЙржЬ ржХрж░рзЗ ржЯрж╛ржЗржорж▓рж╛ржЗржирзЗ log рж░рж╛ржЦрж╛рж░ ржЯрзБрж▓

ЁЯФ╣ 4. Logging for Debugging

ржХрзЛржирзЛ ржЕрзНржпрж╛ржк ржмрж╛ржирж╛ржирзЛрж░ рж╕ржорзЯ ржПржЯрж╛ ржЦрзБржм ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗ:
ржжрзЗржЦрждрзЗ ржХрж╛рж░ ржЗржиржкрзБржЯ ржЖрж╕рж▓рзЛ
ржХрж┐ ржЯрж╛ржЗржорзЗ ржХрж┐ ржШржЯржЫрзЗ
ржХрзЛржерж╛рзЯ bug рж╣ржЪрзНржЫрзЗ


*/